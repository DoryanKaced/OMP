# AUTOGENERATED! DO NOT EDIT! File to edit: 00_geoloader.ipynb (unless otherwise specified).

__all__ = ['detect_shapefile_encoding', 'read_shapefile']

# Cell
import chardet
import pandas as pd
from pathlib import Path
import shapefile
from shapely.geometry import Polygon, MultiPolygon
from shapely.geometry import shape
from os import listdir
from os.path import join

# Cell
def detect_shapefile_encoding(path) -> str:
    """Read the encoding of a dbf file associated to a shapefile."""
    path = Path(path)
    file = path.with_suffix(".dbf")

    with open(file, 'rb') as rawdata:
        character_encoding = chardet.detect(rawdata.read())['encoding']

    if character_encoding:
        return character_encoding

    return "utf-8"

# Cell
def read_shapefile(path) -> pd.DataFrame:
    """Read a ESRI shapefile and convert it to a dataframe"""
    character_encoding = detect_shapefile_encoding(path)
    try:
        sf = shapefile.Reader(path, encoding= character_encoding)
    except UnicodeDecodeError:
        print("path")


    col = [x[0] for x in sf.fields[1:]]

    df = pd.DataFrame(data = sf.records(), columns = col)

    geometries = [(MultiPolygon([x]) if x.geom_type != 'MultiPolygon'else x )
                                  if x.area > 0
                                  else None
                                  for x in map(shape,sf.shapes())]

    df['geometry'] = geometries

    df = df[df['geometry']!=None]

    return df